#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
const ll mn = 3e3 + 10;
const ll inf = 1e10;
ll d[mn],vis[mn],pre[mn];
struct ain {
    ll v,w;
};
ll n,m,k;
vector<ain>nod[mn];
priority_queue<pair<ll,ll>>q;
void dj(ll s)
{
    for (ll i = 0; i <= n; i++) d[i] = inf;
    d[s] = 0; q.push({ 0,s });
    while (q.size())
    {
        auto t=q.top(); q.pop();
        ll u = t.second;
        if (vis[u]) continue;
        vis[u] = 1;
        for (auto ed : nod[u])
        {
            ll v = ed.v, w = ed.w;
            if (d[v]>d[u]+w)
            {
                d[v]=d[u]+w;
                pre[v]=u;
                q.push({ -d[v],v});
            }
        }
    }
}
//输出路径方案
void dfs(ll u,ll s)//s表示起点
{
    if(u==s) {cout<<u<<" ";return;}
    dfs(pre[u],s);
    cout<<u<<" ";
}
